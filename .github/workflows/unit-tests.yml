name: Unit Tests
run-name: ${{ github.actor }} Run Unit Tests Jobs âœ…

# Since Unit Tests are required to pass for each PR,
# we cannot disable them for documentation-only changes.
on:
    pull_request:
    push:
        branches:
            - main
            - 'release/**'
            - 'publisherwp/**'
    # Allow manually triggering the workflow.
    workflow_dispatch:

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
    # The concurrency group contains the workflow name and the branch name for pull requests
    # or the commit hash for any other events.
    group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
    cancel-in-progress: true

jobs:
    submodule-update:
        name: Git Submodule Update
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Initialize Submodule
              run: git submodule init

    unit-js:
        name: JavaScript
        runs-on: ubuntu-latest
        needs: [submodule-update]
        if: ${{ github.repository == 'publisherwp/publisher-core' || github.event_name == 'pull_request' }}

        strategy:
            fail-fast: false
            matrix:
                node: ['14']

        steps:
            - name: Use desired version of Node.js
              uses: actions/setup-node@v3
              with:
                  node-version-file: '.nvmrc'
                  node-version: ${{ inputs.node-version }}
                  cache: npm

            - name: Get Node.js and npm version
              id: node-version
              run: |
                  echo "NODE_VERSION=$(node -v)" >> $GITHUB_OUTPUT
              shell: bash

            - name: Cache node_modules
              id: cache-node_modules
              uses: actions/cache@v3
              with:
                  path: '**/node_modules'
                  key: node_modules-${{ runner.os }}-${{ steps.node-version.outputs.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}

            - name: Install npm dependencies
              if: ${{ steps.cache-node_modules.outputs.cache-hit != 'true' }}
              run: npm ci --force
              shell: bash

            - name: Npm build
              run: npx run build

            - name: Running the tests
              run: npm run test:js
