<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards for Blockera Core Packages">
    <description>Sniffs for WordPress plugins, with minor modifications for Core</description>

    <!-- Check for cross-version support for PHP 7.0 and higher. -->
    <config name="testVersion" value="7.4-"/>
    <rule ref="PHPCompatibilityWP">
        <include-pattern>*\.php$</include-pattern>
    </rule>

    <rule ref="WordPress-Core"/>
    <rule ref="WordPress-Docs"/>
    <rule ref="WordPress.WP.I18n"/>
    <config name="text_domain" value="blockera,default"/>

    <rule ref="WordPress.Files.FileName.NotHyphenatedLowercase">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="WordPress.NamingConventions.ValidHookName.UseUnderscores">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Commenting.ClassComment.Missing">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Generic.Commenting.DocComment.MissingShort">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.MissingParamComment">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.Missing">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.MissingParamTag">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.MissingParamType">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Commenting.InlineComment.WrongStyle">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="WordPress.WP.TimezoneChange.DeprecatedSniff">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="WordPress.NamingConventions.PrefixAllGlobals">
        <exclude-pattern>*</exclude-pattern>
    </rule>

    <rule ref="PHPCompatibility.Classes.NewTypedProperties.Found">
        <exclude-pattern>*</exclude-pattern>
    </rule>

    <rule ref="WordPress.CodeAnalysis.EmptyStatement"/>

    <rule ref="PEAR.Functions.FunctionCallSignature">
        <properties>
            <property name="allowMultipleArguments" value="false"/>
        </properties>
    </rule>

    <rule ref="WordPress.NamingConventions.ValidHookName">
        <properties>
            <property name="additionalWordDelimiters" value="/"/>
        </properties>
    </rule>

    <arg value="ps"/>
    <arg name="extensions" value="php"/>

    <!-- Cache the scan results and re-use those for unchanged files on the next scan. -->
    <arg name="cache" value=".cache/phpcs.json"/>

    <file>./packages</file>

    <!-- Exclude generated files -->
    <exclude-pattern>node_modules/*</exclude-pattern>
    <exclude-pattern>./bin/*</exclude-pattern>
    <exclude-pattern>./packages/**/tests/*</exclude-pattern>
    <exclude-pattern>./packages/dev-phpunit/*</exclude-pattern>
    <exclude-pattern>./packages/freemius-sdk/*</exclude-pattern>
    <exclude-pattern>.patch/*</exclude-pattern>

    <!-- Exclude third party libraries -->
    <exclude-pattern>./vendor/*</exclude-pattern>

    <rule ref="WordPress.Files.FileName.NotHyphenatedLowercase">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="WordPress.Files.FileName.InvalidClassFileName">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Commenting.FileComment.Missing">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Generic.Arrays.DisallowShortArraySyntax.Found">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Generic.Files.LineEndings.InvalidEOLChar">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Commenting.ClosingDeclarationComment.Missing">
        <exclude-pattern>/*</exclude-pattern>
    </rule>
</ruleset>